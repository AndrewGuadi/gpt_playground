📌 Project Description
Title:
“Live Browser Sensor Dashboard”

📋 What It Is
A single-page web app (one HTML, one CSS, one JS) that reads live data from motion and environmental sensors built into a user’s device.
It shows these readings in real time directly in the browser — no backend, no database, no extra libraries.

🎯 Purpose
To demonstrate how modern browsers expose physical device sensors (like accelerometer, gyroscope, magnetometer).

To visualize how these values change when the user moves, tilts, rotates, or changes the surrounding light.

To serve as a learning reference for using the Generic Sensor API and older fallback events.

📱 Core Features
✅ 1. Motion Sensors

Accelerometer — measures how the device moves linearly along X, Y, Z axes.

Gyroscope — measures rotation/spin around the axes.

Device Motion — fallback for combined motion + rotation rate.

Device Orientation — fallback for compass-like tilt and heading.

✅ 2. Environmental Sensors

Ambient Light Sensor — shows light level (lux).

Magnetometer — shows magnetic field strength, useful for compass data.

🔒 How It Works
On page load, the JS file checks if each sensor is supported.

If yes, it requests permission (if needed) and starts streaming live data.

The page displays the readings in separate, clearly labeled blocks.

If a sensor is unsupported, the page shows a fallback message.

🎨 Look & Feel
The CSS keeps it simple: readable text, clean blocks for each sensor, basic layout.

The page works fully offline (except for needing HTTPS to access some sensors).

⚙️ Technical Notes
Uses Generic Sensor API (modern standard) for accelerometer, gyroscope, magnetometer, ambient light.

Uses DeviceMotion and DeviceOrientation as fallback for older devices.

No server — all data stays in the browser.

No libraries or frameworks — pure HTML, CSS, JS.

🚀 Use Case
A student or developer moves their phone around, tilts it, spins it, shines a light at it — and watches the data change instantly.

Useful for demos, motion-controlled prototypes, or learning how sensor permissions work.